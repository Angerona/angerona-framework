<simulation-configuration>
	<name>Graph-Test SCM</name>
    <category>business</category>   
    <behavior>com.github.kreatures.core.def.DefaultBehavior</behavior>
	<description>
	This scenario does the same as the scm/asp/Strike Committee Meeting (ASP) but uses other
	operators, namely know-how driven plan generation operators. The communication is:
	- Employee informs boss that he needs an excuse
	- Boss asks Employee if he attend the strike committee meeting.
	- Employee lies and therefore answers with no
	This scenario uses the graph driven plan generation.
	</description>

    <agent-instance>
		<name>employee</name>
        <agent-config source="config/agents/knowhow_agent_graph.xml" />         
        <beliefbase-config source="config/beliefbases/asp_beliefbase.xml" />
         
        <capability>QueryAnswer</capability>
		<capability>Inform</capability>
		
        <desire>not_on_blacklist</desire>
        <desire>attend_scm</desire>
         
        <data key="Confidential">
            (boss, __DEFAULT__, attend_scm(employee))
        </data>
		<data key="KnowHow">
			attend_scm, excused(a_SELF), 
		 	excused(T_AGENT), s_Inform(a_boss, excused(T_AGENT)),
		 	answer_query, honest_answer, 
		 	answer_query, lie,
		 	honest_answer, s_QueryAnswer(p_honest),  
		 	lie, s_QueryAnswer(p_lie),
		</data>
	</agent-instance>
      
	<agent-instance>
      	<name>boss</name>
      	
        <agent-config source="config/agents/knowhow_agent_graph.xml" />         
        <beliefbase-config source="config/beliefbases/asp_beliefbase.xml" />
         
      	<capability>Query</capability>
        <!-- not_sure(excused(employee)), (s_Query(a_employee, medical_appointment) ,s_Query(a_employee, attend_scm(employee))),  -->
        <!-- not_sure(excused(employee)), (s_Query(a_employee, attend_scm(employee))),  -->
        <data key="KnowHow">
			not_sure(excused(employee)), (s_Query(a_employee, medical_appointment) ,s_Query(a_employee, attend_scm(employee))),
		</data> 
		
	</agent-instance>
</simulation-configuration>
